// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cliente {
  id          Int         @id @default(autoincrement())
  nome        String      @db.VarChar(100)
  telefone    String      @db.VarChar(15)
  email       String      @db.VarChar(100)
  placa       String      @db.VarChar(20)
  alugueis    Aluguel[]
  pagamentos  Pagamento[]
  @@map("clientes")
}

model Box {
  id          Int         @id @default(autoincrement())
  numero      Int         @unique
  ocupado     Boolean     @default(false)
  precoMensal Decimal     @db.Decimal(9,2)
  alugueis    Aluguel[]
  @@map("boxes")
}



model Aluguel {
  id          Int         @id @default(autoincrement())
  cliente     Cliente     @relation(fields: [clienteId], references: [id])
  clienteId   Int
  box         Box         @relation(fields: [boxId], references: [id])
  boxId       Int
  inicio      DateTime    @default(now())
  fim         DateTime?
  ativo       Boolean     @default(true)
  @@map("alugueis")
}

model Pagamento {
  id        Int             @id @default(autoincrement())
  cliente   Cliente         @relation(fields: [clienteId], references: [id])
  clienteId Int
  tipo      FormaPagamento
  data      DateTime        @default(now())
  @@map("pagamentos")
}

enum FormaPagamento {
  PIX
  CARTAO
  DINHEIRO
}

model Usuario {
  id           Int      @id @default(autoincrement())
  nome         String   @db.VarChar(100)
  email        String   @unique @db.VarChar(100)
  senha        String
  status       String   @default("INATIVO")
  nivel        Int      @default(1)
  ultimoLogin  DateTime?
  logs         Log[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("usuarios")
}

model Log {
  id         Int      @id @default(autoincrement())
  acao       String
  dataHora   DateTime @default(now())
  usuarioId  Int
  usuario    Usuario  @relation(fields: [usuarioId], references: [id])

  @@map("logs")
}

